{"version":3,"sources":["constants/constants.js","utils/questionUtils.js","components/hoc/InputFieldWrapper.jsx","i18N/en-US.js","components/loginForm/EmailField.jsx","components/loginForm/PasswordField.jsx","components/loginForm/SubmitButton.jsx","utils/loginFormUtils.js","components/loginForm/LoginForm.jsx","utils/common.js","components/hoc/Async.jsx","components/questions/singleQuestion/QuestionStat.jsx","components/questions/singleQuestion/QuestionSummary.jsx","components/questions/singleQuestion/SingleQuestion.jsx","components/Error.jsx","components/questions/Questions.jsx","utils/profileUtils.js","components/hoc/PageWrapper.jsx","components/profile/User.jsx","components/profile/UserTags.jsx","components/profile/Profile.jsx","components/Page404.jsx","components/hoc/ErrorBoundary.jsx","App.js","index.js"],"names":["SITE","ANSWERS","GOLD","SILVER","BRONZE","initData","hasMore","items","getParams","page","site","pagesize","order","sort","InputFieldWrapper","props","children","label","error","Box","direction","gap","size","Heading","level","textAlign","margin","align","Alert","color","Text","defaultProps","undefined","title","login","header","submitBtn","email","password","placeholder","errors","required","emailFormat","passwordLength","questions","stats","votes","answers","views","nav","prev","next","profile","reputation","tagHeader","score","answer","question","loader","description","locale","EmailField","formik","touched","getFieldProps","TextInput","id","name","type","icon","Mail","PasswordField","License","SubmitButton","Button","primary","variant","initialValues","validationSchema","Yup","min","LoginForm","history","useHistory","useFormik","onSubmit","values","onSubmitProps","console","log","resetForm","push","handleSubmit","justify","background","fill","Card","width","elevation","CardHeader","height","CardBody","pad","fetchData","url","params","axios","get","then","status","data","catch","response","statusText","error_name","message","error_message","Async","isLoading","alignSelf","Spinner","QuestionStat","answer_count","correct","is_answered","view_count","getStat","key","value","bool","isBorder","isBg","border","round","numeral","format","QuestionSummary","isUser","tags","bountyAmount","bounty_amount","owner","ownerId","user_id","ownerName","display_name","modifiedOn","last_edit_date","vertical","end","horizontal","weight","map","el","wordBreak","moment","fromNow","to","Question","Error","top","bottom","Questions","useState","setData","setPage","setError","useEffect","a","res","has_more","getNav","plain","Previous","disabled","onClick","Next","reverse","length","SingleQuestion","question_id","getUserInfoUrl","userId","getUserTagsUrl","getUserQsUrl","initUser","imageUrl","location","link","badges","gold","silver","bronze","userInfoParams","sortTags","b","answer_score","question_score","PageWrapper","Header","User","user","setUser","profile_image","badge_counts","Grid","rows","columns","Image","src","alt","fit","getProfileImage","Location","Link","href","target","str","toUpperCase","slice","getProfileInfo","UserTags","topTags","setTopTags","tag","tag_name","ansScore","qsScore","Profile","useParams","Page404","ErrorBoundary","state","hasError","this","Component","App","Grommet","theme","full","className","exact","path","component","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7cbc6a8.chunk.js","sourcesContent":["export const SITE = \"stackoverflow\";\r\nexport const PAGE_SIZE = 50;\r\n\r\nexport const VOTES = \"votes\";\r\nexport const ANSWERS = \"answers\";\r\nexport const VIEWS = \"views\";\r\n\r\nexport const GOLD = \"gold\";\r\nexport const SILVER = \"silver\";\r\nexport const BRONZE = \"bronze\";\r\n","import { SITE, PAGE_SIZE } from \"../constants/constants\";\r\n\r\nexport const initData = {\r\n\thasMore: false,\r\n\titems: [],\r\n};\r\n\r\nexport const getParams = (page) => ({\r\n\tsite: SITE,\r\n\tpagesize: PAGE_SIZE,\r\n\tpage,\r\n\torder: \"desc\",\r\n\tsort: \"activity\",\r\n});\r\n\r\nexport const featureQsUrl =\r\n\t\"https://api.stackexchange.com/2.3/questions/featured\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Heading, Text } from \"grommet\";\r\nimport { Alert } from \"grommet-icons\";\r\n\r\nconst InputFieldWrapper = (props) => {\r\n\tconst { children, label, error } = props;\r\n\treturn (\r\n\t\t<Box direction=\"column\" gap=\"xsmall\" size=\"small\">\r\n\t\t\t{label ? (\r\n\t\t\t\t<Heading level={5} textAlign=\"start\" margin=\"none\">\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</Heading>\r\n\t\t\t) : null}\r\n\r\n\t\t\t{children}\r\n\r\n\t\t\t{error ? (\r\n\t\t\t\t<Box direction=\"row\" gap=\"xsmall\" align=\"center\">\r\n\t\t\t\t\t<Alert size=\"small\" color=\"status-error\" />\r\n\t\t\t\t\t<Text size=\"xsmall\" textAlign=\"start\" color=\"status-error\">\r\n\t\t\t\t\t\t{error}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</Box>\r\n\t\t\t) : null}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nInputFieldWrapper.defaultProps = {\r\n\tlabel: undefined,\r\n\terror: false,\r\n};\r\n\r\nInputFieldWrapper.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tlabel: PropTypes.string,\r\n\terror: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputFieldWrapper;\r\n","export default {\r\n\ttitle: \"Stackflow\",\r\n\tlogin: {\r\n\t\theader: \"Welcome to Stackflow\",\r\n\t\tsubmitBtn: \"Login\",\r\n\t\tlabel: {\r\n\t\t\temail: \"Email\",\r\n\t\t\tpassword: \"Password\",\r\n\t\t},\r\n\t\tplaceholder: {\r\n\t\t\temail: \"yourname@mail.com\",\r\n\t\t\tpassword: \"Password\",\r\n\t\t},\r\n\t\terrors: {\r\n\t\t\trequired: \"This field is required.\",\r\n\t\t\temailFormat: \"Invalid email format.\",\r\n\t\t\tpasswordLength: \"Password should have minimum 6 characters.\",\r\n\t\t},\r\n\t},\r\n\tquestions: {\r\n\t\theader: \"Top Questions\",\r\n\t\tstats: {\r\n\t\t\tvotes: \"votes\",\r\n\t\t\tanswers: \"answers\",\r\n\t\t\tviews: \"views\",\r\n\t\t},\r\n\t\tnav: {\r\n\t\t\tprev: \"Previous\",\r\n\t\t\tnext: \"Next\",\r\n\t\t},\r\n\t},\r\n\tprofile: {\r\n\t\treputation: \"Reputation\",\r\n\t\ttagHeader: \"Top Tags\",\r\n\t\tscore: {\r\n\t\t\tanswer: \"Answer Score\",\r\n\t\t\tquestion: \"Question Score\",\r\n\t\t},\r\n\t},\r\n\tloader: \"Hang on till we fetch data...\",\r\n\terror: {\r\n\t\ttitle: \"Error\",\r\n\t\tdescription: \"Description\",\r\n\t},\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TextInput } from \"grommet\";\r\nimport { Mail } from \"grommet-icons\";\r\nimport InputFieldWrapper from \"../hoc/InputFieldWrapper\";\r\nimport locale from \"../../i18N/en-US\";\r\n\r\nconst { label, placeholder } = locale.login;\r\n\r\nconst EmailField = (props) => {\r\n\tconst { formik } = props;\r\n\tconst { errors, touched, getFieldProps } = formik;\r\n\r\n\treturn (\r\n\t\t<InputFieldWrapper\r\n\t\t\tlabel={label.email}\r\n\t\t\terror={touched.email && errors.email}\r\n\t\t>\r\n\t\t\t<TextInput\r\n\t\t\t\tid=\"email\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\ticon={<Mail />}\r\n\t\t\t\tsize='small'\r\n\t\t\t\tplaceholder={placeholder.email}\r\n\t\t\t\t{...getFieldProps('email')}\r\n\t\t\t/>\r\n\t\t</InputFieldWrapper>\r\n\t);\r\n};\r\n\r\nEmailField.propTypes = {\r\n\tformik: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EmailField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TextInput } from \"grommet\";\r\nimport { License } from \"grommet-icons\";\r\nimport InputFieldWrapper from \"../hoc/InputFieldWrapper\";\r\n\r\nimport locale from \"../../i18N/en-US\";\r\n\r\nconst { label, placeholder } = locale.login;\r\n\r\nconst PasswordField = (props) => {\r\n\tconst { formik } = props;\r\n\r\n\tconst { errors, touched, getFieldProps } = formik;\r\n\r\n\treturn (\r\n\t\t<InputFieldWrapper\r\n\t\t\tlabel={label.password}\r\n\t\t\terror={touched.password && errors.password}\r\n\t\t>\r\n\t\t\t<TextInput\r\n\t\t\t\tid=\"password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\ticon={<License />}\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tplaceholder={placeholder.password}\r\n\t\t\t\t{...getFieldProps(\"password\")}\r\n\t\t\t/>\r\n\t\t</InputFieldWrapper>\r\n\t);\r\n};\r\n\r\nPasswordField.propTypes = {\r\n\tformik: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default PasswordField;\r\n","import React from \"react\";\r\nimport { Button } from \"grommet\";\r\nimport locale from \"../../i18N/en-US\";\r\n\r\nconst SubmitButton = () => (\r\n\t<Button\r\n\t\tprimary\r\n\t\tvariant=\"contained\"\r\n\t\tcolor=\"dark-1\"\r\n\t\ttype=\"submit\"\r\n\t\tlabel={locale.login.submitBtn}\r\n\t/>\r\n);\r\n\r\nexport default SubmitButton;\r\n","import * as Yup from \"yup\";\r\nimport locale from \"../i18N/en-US\";\r\n\r\nexport const initialValues = {\r\n\temail: \"\",\r\n\tpassword: \"\",\r\n};\r\n\r\nexport const validationSchema = Yup.object({\r\n\temail: Yup.string()\r\n\t\t.required(locale.login.errors.required)\r\n\t\t.email(locale.login.errors.emailFormat),\r\n\tpassword: Yup.string()\r\n\t\t.required(locale.login.errors.required)\r\n\t\t.min(6, locale.login.errors.passwordLength),\r\n});\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { Box, Card, CardHeader, CardBody } from \"grommet\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EmailField from \"./EmailField\";\r\nimport PasswordField from \"./PasswordField\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport locale from \"../../i18N/en-US\";\r\n\r\nimport { initialValues, validationSchema } from \"../../utils/loginFormUtils\";\r\n\r\nconst LoginForm = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst onSubmit = (values, onSubmitProps) => {\r\n\t\tconsole.log(values);\r\n\t\tonSubmitProps.resetForm();\r\n\t\thistory.push(\"/featured\");\r\n\t};\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues,\r\n\t\tonSubmit,\r\n\t\tvalidationSchema,\r\n\t});\r\n\r\n\tconst { handleSubmit } = formik;\r\n\r\n\tconst getForm = () => (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Box gap=\"medium\" pad=\"small\">\r\n\t\t\t\t<EmailField formik={formik} />\r\n\t\t\t\t<PasswordField formik={formik} />\r\n\t\t\t\t<SubmitButton />\r\n\t\t\t</Box>\r\n\t\t</form>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Box align=\"center\" justify=\"center\" background=\"light-3\" fill>\r\n\t\t\t<Card width=\"medium\" elevation=\"medium\">\r\n\t\t\t\t<CardHeader justify=\"center\" height=\"xxsmall\" background=\"dark-1\">\r\n\t\t\t\t\t{locale.login.header}\r\n\t\t\t\t</CardHeader>\r\n\t\t\t\t<CardBody background=\"light-2\">{getForm()}</CardBody>\r\n\t\t\t</Card>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from \"axios\";\r\n\r\nexport const fetchData = (url, params) =>\r\n\taxios\r\n\t\t.get(url, { params })\r\n\t\t.then(({ status, data }) => {\r\n\t\t\treturn { status, data, error: undefined };\r\n\t\t})\r\n\t\t.catch(({ response: { status, statusText, data } }) => {\r\n\t\t\tconst error = {\r\n\t\t\t\tname: data.error_name,\r\n\t\t\t\tmessage: data.error_message,\r\n\t\t\t};\r\n\t\t\treturn { status, statusText, data: undefined, error };\r\n\t\t});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Spinner, Text } from \"grommet\";\r\nimport locale from '../../i18N/en-US';\r\n\r\nconst Async = (props) => {\r\n\tconst { isLoading, children } = props;\r\n\treturn isLoading ? (\r\n\t\t<Box\r\n\t\t\talignSelf=\"center\"\r\n\t\t\talign=\"center\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\theight=\"small\"\r\n\t\t\tgap=\"small\"\r\n\t\t>\r\n\t\t\t<Spinner size=\"medium\" color=\"dark-2\" />\r\n\t\t\t<Text size=\"small\">{locale.loader}</Text>\r\n\t\t</Box>\r\n\t) : (\r\n\t\tchildren\r\n\t);\r\n};\r\n\r\nAsync.defaultProps = {\r\n\tisLoading: true,\r\n};\r\n\r\nAsync.propTypes = {\r\n\tisLoading: PropTypes.bool,\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Async;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Text } from \"grommet\";\r\nimport numeral from \"numeral\";\r\nimport locale from \"../../../i18N/en-US\";\r\nimport { VOTES, ANSWERS, VIEWS } from \"../../../constants/constants\";\r\n\r\nconst QuestionStat = (props) => {\r\n\tconst { data } = props;\r\n\tconst {\r\n\t\tscore: votes,\r\n\t\tanswer_count: answers,\r\n\t\tis_answered: correct,\r\n\t\tview_count: views,\r\n\t} = data;\r\n\r\n\tconst getStat = (key, value, bool = false) => {\r\n\t\tconst isBorder = key === ANSWERS && !!value;\r\n\t\tconst isBg = key === ANSWERS && bool;\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\talign=\"center\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\theight=\"3em\"\r\n\t\t\t\twidth=\"3em\"\r\n\t\t\t\tbackground={isBg && \"dark-2\"}\r\n\t\t\t\tborder={isBorder}\r\n\t\t\t\tround=\"xxsmall\"\r\n\t\t\t>\r\n\t\t\t\t<Text>{numeral(value).format(\"0,0a\")}</Text>\r\n\t\t\t\t<Text size=\"xsmall\">{locale.questions.stats[key]}</Text>\r\n\t\t\t</Box>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box direction=\"row\" width=\"12em\" gap=\"small\" justify=\"center\">\r\n\t\t\t{getStat(VOTES, votes)}\r\n\t\t\t{getStat(ANSWERS, answers, correct)}\r\n\t\t\t{getStat(VIEWS, views)}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nQuestionStat.propTypes = {\r\n\tdata: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default QuestionStat;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Box, Text } from \"grommet\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\n\r\nconst QuestionSummary = (props) => {\r\n\tconst { data, isUser } = props;\r\n\tconst {\r\n\t\ttitle,\r\n\t\ttags,\r\n\t\tbounty_amount: bountyAmount,\r\n\t\towner: { user_id: ownerId, display_name: ownerName },\r\n\t\tlast_edit_date: modifiedOn,\r\n\t} = data;\r\n\r\n\tconst getUpperContainer = () => {\r\n\t\treturn (\r\n\t\t\t<Box direction=\"row\" gap=\"xsmall\" align=\"start\">\r\n\t\t\t\t<Box\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\twidth=\"xxxsmall\"\r\n\t\t\t\t\tpad={{ horizontal: \"xsmall\" }}\r\n\t\t\t\t\tborder\r\n\t\t\t\t\tround=\"xsmall\"\r\n\t\t\t\t\tbackground=\"dark-3\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text size=\"xsmall\">{numeral(bountyAmount).format(\"+0\")}</Text>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t\t<Text size=\"small\" weight=\"bold\">\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Text>\r\n\t\t\t</Box>\r\n\t\t);\r\n\t};\r\n\r\n\tconst getTags = () => (\r\n\t\t<Box direction=\"row\" gap=\"xsmall\">\r\n\t\t\t{tags.map((el) => (\r\n\t\t\t\t<Box\r\n\t\t\t\t\tkey={el}\r\n\t\t\t\t\tborder\r\n\t\t\t\t\tround=\"xsmall\"\r\n\t\t\t\t\tpad={{ horizontal: \"xsmall\" }}\r\n\t\t\t\t\tbackground=\"light-6\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text wordBreak='break-all' size=\"xsmall\">{el}</Text>\r\n\t\t\t\t</Box>\r\n\t\t\t))}\r\n\t\t</Box>\r\n\t);\r\n\r\n\tconst getDetails = () => (\r\n\t\t<Text textAlign=\"end\" size=\"xsmall\">\r\n\t\t\t{`modified ${moment(modifiedOn).fromNow()} `}\r\n\r\n\t\t\t{!isUser && (\r\n\t\t\t\t<Link to={`/user/${ownerId}`}>\r\n\t\t\t\t\t<Text size=\"xsmall\">{ownerName}</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t</Text>\r\n\t);\r\n\r\n\tconst getLowerContainer = () => (\r\n\t\t<>\r\n\t\t\t{getTags()}\r\n\t\t\t{getDetails()}\r\n\t\t</>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tgap=\"xsmall\"\r\n\t\t\twidth=\"large\"\r\n\t\t\tpad={{ vertical: \"xxsmall\", end: \"xsmall\" }}\r\n\t\t>\r\n\t\t\t{getUpperContainer()}\r\n\t\t\t{getLowerContainer()}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nQuestionSummary.propTypes = {\r\n\tdata: PropTypes.object.isRequired,\r\n\tisUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default QuestionSummary;\r\n","import React from \"react\";\r\nimport { Box } from \"grommet\";\r\nimport QuestionStat from \"./QuestionStat\";\r\nimport QuestionSummary from \"./QuestionSummary\";\r\n\r\nconst Question = (props) => (\r\n\t<Box\r\n\t\talign=\"center\"\r\n\t\tdirection=\"row\"\r\n\t\tgap=\"medium\"\r\n\t\twidth=\"xlarge\"\r\n\t\tbackground=\"light-2\"\r\n\t>\r\n\t\t<QuestionStat {...props} />\r\n\t\t<QuestionSummary {...props} />\r\n\t</Box>\r\n);\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Heading, Text } from \"grommet\";\r\nimport locale from \"../i18N/en-US\";\r\n\r\nconst Error = (props) => {\r\n\tconst { status, statusText, error } = props;\r\n\tconst { name, message } = error;\r\n\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tborder={{ color: \"#ef9a9a\" }}\r\n\t\t\tround=\"xsmall\"\r\n\t\t\tpad=\"small\"\r\n\t\t\tbackground=\"#ffebee\"\r\n\t\t>\r\n\t\t\t<Heading level={3} margin={{ top: \"none\", bottom: \"small\" }}>\r\n\t\t\t\t{`${status}: ${statusText}`}\r\n\t\t\t</Heading>\r\n\r\n\t\t\t<Box direction=\"row\" gap=\"small\">\r\n\t\t\t\t<Text size=\"small\" weight=\"bold\">\r\n\t\t\t\t\t{`${locale.error.title}:`}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text size=\"small\">{name}</Text>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<Box direction=\"row\" gap=\"small\">\r\n\t\t\t\t<Text size=\"small\" weight=\"bold\">\r\n\t\t\t\t\t{`${locale.error.description}:`}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Text size=\"small\">{message}</Text>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nError.propTypes = {\r\n\tstatus: PropTypes.number.isRequired,\r\n\tstatusText: PropTypes.string.isRequired,\r\n\terror: PropTypes.shape({\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\tmessage: PropTypes.string.isRequired,\r\n\t}).isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Heading, Button, Text } from \"grommet\";\r\nimport { Previous, Next } from \"grommet-icons\";\r\nimport { initData, getParams } from \"../../utils/questionUtils\";\r\nimport locale from \"../../i18N/en-US\";\r\nimport { fetchData } from \"../../utils/common\";\r\nimport Async from \"../hoc/Async\";\r\nimport SingleQuestion from \"./singleQuestion/SingleQuestion\";\r\nimport Error from \"../Error\";\r\n\r\nconst Questions = (props) => {\r\n\tconst { url, isUser } = props;\r\n\r\n\tconst [data, setData] = useState(initData);\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst res = await fetchData(url, getParams(page));\r\n\r\n\t\tif (res?.status === 200) {\r\n\t\t\tconst { has_more: hasMore, items } = res.data;\r\n\t\t\tsetData({ hasMore, items });\r\n\t\t\tsetError(false);\r\n\t\t} else {\r\n\t\t\tsetError(res);\r\n\t\t\tsetData(initData);\r\n\t\t}\r\n\t}, [page]);\r\n\r\n\tconst getHeader = () => (\r\n\t\t<Box margin={{ vertical: \"small\" }} gap=\"xsmall\">\r\n\t\t\t<Heading level={isUser ? 4 : 3} margin=\"none\">\r\n\t\t\t\t{locale.questions.header}\r\n\t\t\t</Heading>\r\n\t\t\t<Box border={isUser && \"medium\"} />\r\n\t\t</Box>\r\n\t);\r\n\r\n\tconst getNav = () => (\r\n\t\t<Box direction=\"row\" justify=\"between\">\r\n\t\t\t<Button\r\n\t\t\t\tplain\r\n\t\t\t\tlabel={<Text size=\"small\">{locale.questions.nav.prev}</Text>}\r\n\t\t\t\ticon={<Previous size=\"small\" />}\r\n\t\t\t\tcolor=\"dark-2\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tdisabled={page === 1}\r\n\t\t\t\tonClick={() => setPage((prev) => prev - 1)}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tplain\r\n\t\t\t\tlabel={<Text size=\"small\">{locale.questions.nav.next}</Text>}\r\n\t\t\t\ticon={<Next size=\"small\" />}\r\n\t\t\t\treverse\r\n\t\t\t\tcolor=\"dark-2\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tdisabled={!data.hasMore}\r\n\t\t\t\tonClick={() => setPage((prev) => prev + 1)}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n\r\n\tconst getContent = () => (\r\n\t\t<Async isLoading={!data.items.length}>\r\n\t\t\t<Box gap=\"small\">\r\n\t\t\t\t{getNav()}\r\n\t\t\t\t<Box gap=\"small\">\r\n\t\t\t\t\t{data.items.map((el) => (\r\n\t\t\t\t\t\t<SingleQuestion key={el.question_id} data={el} isUser={isUser} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t\t{getNav()}\r\n\t\t\t</Box>\r\n\t\t</Async>\r\n\t);\r\n\r\n\tconst getError = () => <Error {...error} />;\r\n\r\n\treturn (\r\n\t\t<Box width=\"large\">\r\n\t\t\t{getHeader()}\r\n\t\t\t{!error ? getContent() : getError()}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nQuestions.defaultProps = {\r\n\tisUser: false,\r\n};\r\n\r\nQuestions.propTypes = {\r\n\turl: PropTypes.string.isRequired,\r\n\tisUser: PropTypes.bool,\r\n};\r\n\r\nexport default Questions;\r\n","import { SITE } from \"../constants/constants\";\r\n\r\nexport const getUserInfoUrl = (userId) =>\r\n\t`https://api.stackexchange.com/2.3/users/${userId}`;\r\n\r\nexport const getUserTagsUrl = (userId) =>\r\n\t`https://api.stackexchange.com/2.3/users/${userId}/top-question-tags`;\r\n\r\nexport const getUserQsUrl = (userId) =>\r\n\t`https://api.stackexchange.com/2.3/users/${userId}/questions`;\r\n\r\nexport const initUser = {\r\n\tname: undefined,\r\n\timageUrl: undefined,\r\n\tlocation: undefined,\r\n\tlink: undefined,\r\n\treputation: undefined,\r\n\tbadges: {\r\n\t\tgold: undefined,\r\n\t\tsilver: undefined,\r\n\t\tbronze: undefined,\r\n\t},\r\n};\r\n\r\nexport const userInfoParams = {\r\n\tsite: SITE,\r\n};\r\n\r\nexport const sortTags = (tags) =>\r\n\ttags.sort(\r\n\t\t(a, b) =>\r\n\t\t\tb.answer_score - a.answer_score || b.question_score - a.question_score\r\n\t);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Header, Heading } from \"grommet\";\r\nimport locale from '../../i18N/en-US';\r\n\r\nconst PageWrapper = (props) => {\r\n\tconst { children } = props;\r\n\treturn (\r\n    <>\r\n      <Header height='xxsmall' background='dark-1' pad='small'>\r\n        <Heading level={3}>{locale.title}</Heading>\r\n      </Header>\r\n\r\n      <Box pad='medium' align='center'>{children}</Box>\r\n    </>\r\n  );\r\n};\r\n\r\nPageWrapper.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default PageWrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Button, Grid, Image, Heading, Text } from \"grommet\";\r\nimport { Location, Link } from \"grommet-icons\";\r\nimport { GOLD, SILVER, BRONZE } from \"../../constants/constants\";\r\nimport { fetchData } from \"../../utils/common\";\r\nimport {\r\n\tgetUserInfoUrl,\r\n\tuserInfoParams,\r\n\tinitUser,\r\n} from \"../../utils/profileUtils\";\r\nimport locale from \"../../i18N/en-US\";\r\n\r\nconst User = (props) => {\r\n\tconst { userId } = props;\r\n\r\n\tconst [user, setUser] = useState(initUser);\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst res = await fetchData(getUserInfoUrl(userId), userInfoParams);\r\n\t\tif (res?.status === 200) {\r\n\t\t\tconst {\r\n\t\t\t\tdisplay_name: name,\r\n\t\t\t\tprofile_image: imageUrl,\r\n\t\t\t\tlink,\r\n\t\t\t\tlocation,\r\n\t\t\t\treputation,\r\n\t\t\t\tbadge_counts: badges,\r\n\t\t\t} = res.data.items[0];\r\n\t\t\tsetUser({ name, imageUrl, link, location, reputation, badges });\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst getProfileImage = () => (\r\n\t\t<Box gap=\"small\" pad=\"xsmall\" border>\r\n\t\t\t<Box height=\"small\" width=\"small\">\r\n\t\t\t\t<Image src={user.imageUrl} alt={userId} fit=\"cover\" />\r\n\t\t\t</Box>\r\n\t\t\t<Box direction=\"row\" alignSelf=\"center\" align=\"end\" gap=\"small\">\r\n\t\t\t\t<Text size=\"small\">{locale.profile.reputation}</Text>\r\n\t\t\t\t<Text size=\"medium\">{user.reputation ?? \"--\"}</Text>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n\r\n\tconst getBadges = () => {\r\n\t\tconst capitalize = (str) =>\r\n\t\t\ttypeof str === \"string\" && str[0].toUpperCase() + str.slice(1);\r\n\r\n\t\treturn (\r\n\t\t\t<Box direction=\"row\" gap=\"medium\" margin={{ top: \"small\" }}>\r\n\t\t\t\t{[GOLD, SILVER, BRONZE].map((el) => (\r\n\t\t\t\t\t<Box key={el} direction=\"row\" gap=\"xsmall\" align=\"end\">\r\n\t\t\t\t\t\t<Text size=\"small\">{capitalize(el)}</Text>\r\n\t\t\t\t\t\t<Text size=\"xxlarge\">{user.badges[el] ?? \"--\"}</Text>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t))}\r\n\t\t\t</Box>\r\n\t\t);\r\n\t};\r\n\r\n\tconst getProfileInfo = () => (\r\n\t\t<Box gap=\"small\">\r\n\t\t\t<Heading level={2} margin={{ vertical: \"small\" }}>\r\n\t\t\t\t{user.name ?? `User ${userId}`}\r\n\t\t\t</Heading>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tplain\r\n\t\t\t\ticon={<Location />}\r\n\t\t\t\tlabel={<Text size=\"small\">{user.location ?? \"--\"}</Text>}\r\n\t\t\t\talignSelf=\"start\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t/>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tplain\r\n\t\t\t\ticon={<Link />}\r\n\t\t\t\tlabel={<Text size=\"small\">{user.link ?? \"--\"}</Text>}\r\n\t\t\t\thref={user.link}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\talignSelf=\"start\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t/>\r\n\r\n\t\t\t{getBadges()}\r\n\t\t</Box>\r\n\t);\r\n\r\n\treturn (\r\n\r\n\t\t\t<Box width=\"large\" margin={{ top: \"medium\", bottom: \"xsmall\" }}>\r\n\t\t\t\t<Grid rows=\"small\" columns={[\"small\", \"medium\"]} gap=\"large\">\r\n\t\t\t\t\t{getProfileImage()}\r\n\t\t\t\t\t{getProfileInfo()}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\r\n\t);\r\n};\r\n\r\nUser.propTypes = {\r\n\tuserId: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Heading, Grid, Text } from \"grommet\";\r\nimport { fetchData } from \"../../utils/common\";\r\nimport {\r\n\tgetUserTagsUrl,\r\n\tuserInfoParams,\r\n\tsortTags,\r\n} from \"../../utils/profileUtils\";\r\nimport locale from \"../../i18N/en-US\";\r\nimport Async from \"../hoc/Async\";\r\nimport Error from \"../Error\";\r\n\r\nconst UserTags = (props) => {\r\n\tconst { userId } = props;\r\n\r\n\tconst [topTags, setTopTags] = useState([]);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(async () => {\r\n\t\tconst res = await fetchData(getUserTagsUrl(userId), userInfoParams);\r\n\t\tif (res?.status === 200) {\r\n\t\t\tconst tags = sortTags(res.data.items)\r\n\t\t\t\t.slice(0, 3)\r\n\t\t\t\t.map((el) => ({\r\n\t\t\t\t\ttag: el.tag_name,\r\n\t\t\t\t\tansScore: el.answer_score,\r\n\t\t\t\t\tqsScore: el.question_score,\r\n\t\t\t\t}));\r\n\t\t\tsetTopTags(tags);\r\n\t\t\tsetError(false);\r\n\t\t} else {\r\n\t\t\tsetError(res);\r\n\t\t\tsetTopTags([]);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst getHeader = () => (\r\n\t\t<Box margin={{ vertical: \"small\" }} gap=\"xsmall\">\r\n\t\t\t<Heading level={4} margin=\"none\">\r\n\t\t\t\t{locale.profile.tagHeader}\r\n\t\t\t</Heading>\r\n\t\t\t<Box border=\"medium\" />\r\n\t\t</Box>\r\n\t);\r\n\r\n\tconst getContent = () => (\r\n\t\t<Async isLoading={!topTags.length}>\r\n\t\t\t<Box gap=\"small\" pad=\"small\">\r\n\t\t\t\t{topTags.map((el) => (\r\n\t\t\t\t\t<Box key={el.tag} direction=\"row\" gap=\"medium\">\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\trows=\"xxxsmall\"\r\n\t\t\t\t\t\t\tcolumns={[\"medium\", \"small\", \"small\"]}\r\n\t\t\t\t\t\t\tgap=\"medium\"\r\n\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\tjustify=\"start\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Box border round=\"xsmall\" pad=\"xxsmall\" background=\"light-4\">\r\n\t\t\t\t\t\t\t\t{el.tag}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"end\">\r\n\t\t\t\t\t\t\t\t<Text size=\"small\">{locale.profile.score.question}</Text>\r\n\t\t\t\t\t\t\t\t<Text size=\"xlarge\">{el.qsScore}</Text>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"end\">\r\n\t\t\t\t\t\t\t\t<Text size=\"small\">{locale.profile.score.answer}</Text>\r\n\t\t\t\t\t\t\t\t<Text size=\"xlarge\">{el.ansScore}</Text>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t))}\r\n\t\t\t</Box>\r\n\t\t</Async>\r\n\t);\r\n\r\n\tconst getError = () => <Error {...error} />;\r\n\r\n\treturn (\r\n\t\t<Box width=\"large\">\r\n\t\t\t{getHeader()}\r\n\t\t\t{!error ? getContent() : getError()}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nUserTags.propTypes = {\r\n\tuserId: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default UserTags;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Box } from \"grommet\";\r\nimport { getUserQsUrl } from \"../../utils/profileUtils\";\r\nimport PageWrapper from \"../hoc/PageWrapper\";\r\nimport User from \"./User\";\r\nimport UserTags from \"./UserTags\";\r\nimport Questions from \"../questions/Questions\";\r\n\r\nconst Profile = () => {\r\n\tconst { userId } = useParams();\r\n\r\n\treturn (\r\n\t\t<PageWrapper>\r\n\t\t\t<Box gap=\"medium\">\r\n\t\t\t\t<User userId={userId} />\r\n\t\t\t\t<UserTags userId={userId} />\r\n\t\t\t\t<Questions url={getUserQsUrl(userId)} isUser />\r\n\t\t\t</Box>\r\n\t\t</PageWrapper>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Box, Heading } from \"grommet\";\r\nimport PageWrapper from \"./hoc/PageWrapper\";\r\n\r\nconst Page404 = () => {\r\n\treturn (\r\n\t\t<PageWrapper>\r\n\t\t\t<Box>\r\n\t\t\t\t<Heading level={2}>404: Page not found ☹</Heading>\r\n\t\t\t</Box>\r\n\t\t</PageWrapper>\r\n\t);\r\n};\r\n\r\nexport default Page404;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box } from \"grommet\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hasError: false };\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\tconsole.log(error);\r\n\t\treturn { hasError: true };\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn (\r\n\t\t\t\t<Box align='center' pad='medium'>\r\n\t\t\t\t\tSomething went wrong.\r\n\t\t\t\t</Box>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Grommet } from \"grommet\";\nimport theme from \"./grommet.config.json\";\nimport { featureQsUrl } from \"./utils/questionUtils\";\nimport LoginForm from \"./components/loginForm/LoginForm\";\nimport Questions from \"./components/questions/Questions\";\nimport Profile from \"./components/profile/Profile\";\nimport PageWrapper from \"./components/hoc/PageWrapper\";\nimport Page404 from \"./components/Page404\";\nimport ErrorBoundary from \"./components/hoc/ErrorBoundary\";\n\nfunction App() {\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<Grommet theme={theme} full className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={LoginForm} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/featured\"\n\t\t\t\t\t\trender={(routeProps) => (\n\t\t\t\t\t\t\t<PageWrapper>\n\t\t\t\t\t\t\t\t<Questions {...routeProps} url={featureQsUrl} />\n\t\t\t\t\t\t\t</PageWrapper>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/user/:userId\" component={Profile} />\n\t\t\t\t\t<Route component={Page404} />\n\t\t\t\t</Switch>\n\t\t\t</Grommet>\n\t\t</ErrorBoundary>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}